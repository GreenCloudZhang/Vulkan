/* Copyright (c) 2021, Sascha Willems
 *
 * SPDX-License-Identifier: MIT
 *
 */

#version 450
#extension GL_EXT_mesh_shader : require

const vec2 pos[]={
    { +0.000, -1.00 },//0
    { +0.150, -0.50 },//1
    { +0.150, +0.00 },//2
    { +0.150, +0.50 },//3
    { +0.000, +1.00 },//4
    { -0.300, +1.00 },//5
    { -0.165, +0.50 },//6
    { -0.165, +0.00 },//7
    { -0.165, -0.50 },//8
    { -0.300, -1.00 }//9
    };
const uint attri[]={
    5,//0
    10,//1
    5,//2
    10,//3
    5,//4
    0,//5
    0,//6
    0,//7
    0,//8
    0//9
    };
//1  3 //6  8
const uvec3 tri[]={
    //convex
    { 0, 1, 2 },//0
    { 2, 3, 4 },//1
    //concave 
    { 5, 6, 7 },//0
    { 7, 8, 9 },//1
    { 4, 5, 6 },//0
    //filled triangle
    { 4, 6, 2 },//1
    { 6, 7, 2 },//0
    { 7, 8, 2 },//1
    { 2, 8, 0 },//0
    { 9, 0, 8 },//1
    };

const vec3 colors[]={
    { 0.5, 0.5, 0.5 },//0
    { 1, 1, 1 },//1
    { 0.5, 0.5, 0.5 },//2
    { 1, 1, 1 },//3
    { 0.5, 0.5, 0.5 },//4
    { 0.0, 0.0, 0.0 },//5
    { 0.0, 0.0, 0.0 },//6
    { 0.0, 0.0, 0.0 },//7
    { 0.0, 0.0, 0.0 },//8
    { 0.0, 0.0, 0.0 },//9
    };

layout (binding = 0) uniform UBO 
{
	mat4 projection;
	mat4 model;
	mat4 view;
} ubo;

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(triangles, max_vertices = 64, max_primitives = 128) out;

//layout(location = 0) out VertexOutput
//{
//	uint attriFlag;
//} vertexOutput[];

layout(location = 0) out VertexOutput
{
	float color;
} vertexOutput[];

void main()
{
    const uint nVerts = 10;
    const uint nPrims = 10;

	//uint iid = gl_LocalInvocationID.x;

	//vec4 offset = vec4(0.0, 0.0, gl_GlobalInvocationID.x, 0.0);

	SetMeshOutputsEXT(nVerts, nPrims);//nV vertexCount nP primitivesCount
    for(int i=0;i<10;i++)
    {
        gl_MeshVerticesEXT[i].gl_Position = vec4(0.9*pos[i].xy,0,1);
        vertexOutput[i].color = colors[i].x;//vec4(colors[i].xyz,1.0);
        gl_PrimitiveTriangleIndicesEXT[i] =  uvec3(tri[i].x,tri[i].y,tri[i].z);
    }
    //for(int i=0;i<10;i++)
    //{
    //    gl_PrimitiveTriangleIndicesEXT[i] =  uvec3(tri[i].x,tri[i].y,tri[i].z);
    //}
}
